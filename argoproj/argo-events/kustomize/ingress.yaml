apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argo-cd-ingress
  namespace: argo-events
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/app-root: /cd
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # type of authentication
    # nginx.ingress.kubernetes.io/auth-type: basic
    # prevent the controller from redirecting (308) to HTTPS
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # name of the secret that contains the user/password definitions
    # nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # message to display with an appropriate context why the authentication is required
    # nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
    # custom max body size for file uploading like backing image uploading
    # nginx.ingress.kubernetes.io/proxy-body-size: 10000m
spec:
  tls:
    - hosts:
      - myk8s.internal
      # This assumes tls-secret exists and the SSL
      # certificate contains a CN for foo.bar.com
      secretName: tls-secret
  rules:
  - host: myk8s.internal
    http:
      paths:
      - pathType: Prefix
        path: /argoevents-webhook(/|$)(.*)
        backend:
          service:
            name: webhook-eventsource-svc
            port:
              number: 12000
