apiVersion: apps/v1
kind: Deployment
metadata:
  name: mediator
  labels:
    app: mediator
  namespace: rentapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mediator
  template:
    metadata:
      labels:
        app: mediator
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z nats-server 4222; do echo waiting for nats-server; sleep 2; done;']
      containers:
      - name: mediator
        image: local.insecure-registry.io/mediator:1.0.0
        imagePullPolicy: Always
        env:
          - name: NATS_SERVER_URL
            value: nats-server:4222
      imagePullSecrets:
      - name: regcred
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-linea
  labels:
    app: scanner-linea
  namespace: rentapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scanner-linea
  template:
    metadata:
      labels:
        app: scanner-linea
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z nats-server 4222; do echo waiting for nats-server; sleep 2; done;']
      containers:
      - name: scanner-linea
        image: local.insecure-registry.io/scanner-linea:1.0.0
        imagePullPolicy: Always
        env:
          - name: NATS_SERVER_URL
            value: nats-server:4222
          - name: NATS_SUBJECT_ROOMURL
            value: room-linea-tky-rent
          - name: NATS_SUBJECT_ROOMDETAIL
            value: roomdetails-tky-rent
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: scanner-linea
  namespace: rentapp
spec:
  ports:
  - name: "http-port"
    protocol: TCP
    port: 3000
  selector:
    app: scanner-linea
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-suumo
  labels:
    app: scanner-suumo
  namespace: rentapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scanner-suumo
  template:
    metadata:
      labels:
        app: scanner-suumo
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z nats-server 4222; do echo waiting for nats-server; sleep 2; done;']
      containers:
      - name: scanner-suumo
        image: local.insecure-registry.io/scanner-suumo:1.0.0
        imagePullPolicy: Always
        env:
          - name: NATS_SERVER_URL
            value: nats-server:4222
          - name: NATS_SUBJECT_ROOMURL
            value: room-suumo-tky-rent
          - name: NATS_SUBJECT_ROOMDETAIL
            value: roomdetails-tky-rent
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: scanner-suumo
  namespace: rentapp
spec:
  ports:
  - name: "http-port"
    protocol: TCP
    port: 3000
  selector:
    app: scanner-suumo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-homes
  labels:
    app: scanner-homes
  namespace: rentapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scanner-homes
  template:
    metadata:
      labels:
        app: scanner-homes
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z nats-server 4222; do echo waiting for nats-server; sleep 2; done;']
      containers:
      - name: scanner-homes
        image: local.insecure-registry.io/scanner-homes:1.0.0
        imagePullPolicy: Always
        env:
          - name: NATS_SERVER_URL
            value: nats-server:4222
          - name: NATS_SUBJECT_ROOMURL
            value: room-homes-tky-rent
          - name: NATS_SUBJECT_ROOMDETAIL
            value: roomdetails-tky-rent
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: scanner-homes
  namespace: rentapp
spec:
  ports:
  - name: "http-port"
    protocol: TCP
    port: 3000
  selector:
    app: scanner-homes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-rstore
  labels:
    app: scanner-rstore
  namespace: rentapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scanner-rstore
  template:
    metadata:
      labels:
        app: scanner-rstore
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z nats-server 4222; do echo waiting for nats-server; sleep 2; done;']
      containers:
      - name: scanner-rstore
        image: local.insecure-registry.io/scanner-rstore:1.0.0
        imagePullPolicy: Always
        env:
          - name: NATS_SERVER_URL
            value: nats-server:4222
          - name: NATS_SUBJECT_ROOMURL
            value: room-rstore-tky-rent
          - name: NATS_SUBJECT_ROOMDETAIL
            value: roomdetails-tky-rent
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: scanner-rstore
  namespace: rentapp
spec:
  ports:
  - name: "http-port"
    protocol: TCP
    port: 3000
  selector:
    app: scanner-rstore
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-goodrooms
  labels:
    app: scanner-goodrooms
  namespace: rentapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scanner-goodrooms
  template:
    metadata:
      labels:
        app: scanner-goodrooms
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z nats-server 4222; do echo waiting for nats-server; sleep 2; done;']
      containers:
      - name: scanner-goodrooms
        image: local.insecure-registry.io/scanner-goodrooms:1.0.0
        imagePullPolicy: Always
        env:
          - name: NATS_SERVER_URL
            value: nats-server:4222
          - name: NATS_SUBJECT_ROOMURL
            value: room-goodrooms-tky-rent
          - name: NATS_SUBJECT_ROOMDETAIL
            value: roomdetails-tky-rent
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: scanner-goodrooms
  namespace: rentapp
spec:
  ports:
  - name: "http-port"
    protocol: TCP
    port: 3000
  selector:
    app: scanner-goodrooms
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notifier
  labels:
    app: notifier
  namespace: rentapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notifier
  template:
    metadata:
      labels:
        app: notifier
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z scanner-linea 3000; do echo waiting for scanner; sleep 2; done;']
      - name: init-myservice2
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z scanner-suumo 3000; do echo waiting for scanner; sleep 2; done;']
      - name: init-myservice3
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z scanner-homes 3000; do echo waiting for scanner; sleep 2; done;']
      - name: init-myservice4
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z scanner-goodrooms 3000; do echo waiting for scanner; sleep 2; done;']
      - name: init-myservice5
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z cache-mgr 50051; do echo waiting for cache-mgr; sleep 2; done;']
      - name: init-myservice6
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z area-info-mgr 50051; do echo waiting for area-info-mgr; sleep 2; done;']
      containers:
      - name: notifier
        image: local.insecure-registry.io/notifier:1.0.0
        imagePullPolicy: Always
        env:
          - name: NATS_SERVER_URL
            value: nats-server:4222
          - name: NATS_CONSUMER_NAME
            value: myconsumer
          - name: NATS_CONSUMER_BATCH_SIZE
            value: "20"
          - name: NATS_CONSUMER_BATCH_DURATION
            value: "600000"
          - name: CACHE_MGR_URL
            value: cache-mgr:50051
          - name: AREA_INFO_MGR_URL
            value: area-info-mgr:50051
          - name: LINE_NOTIFY_TOKEN
            valueFrom:
              secretKeyRef:
                name: line-notify-token
                key: line-notify-token
        volumeMounts:
          - name: notifier-config-tky-rent
            mountPath: /usr/src/app/setting
      volumes:
      - name: notifier-config-tky-rent
        configMap:
          name: notifier-config-tky-rent
          items:
          - key: "consumer-config.json"
            path: "consumer-config.json"
          - key: "setting.json"
            path: "setting.json"
      imagePullSecrets:
      - name: regcred
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache-mgr
  labels:
    app: cache-mgr
  namespace: rentapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cache-mgr
  template:
    metadata:
      labels:
        app: cache-mgr
    spec:
      containers:
      - name: cache-mgr
        image: local.insecure-registry.io/cache-mgr:1.0.0
        imagePullPolicy: Always
        env:
          - name: REDIS_SERVER_URL
            value: "redis://rentapp:6379"
          - name: IGNORE_INSPECTED_CACHE
            value: "0"
        ports:
        - containerPort: 50051
      imagePullSecrets:
      - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: cache-mgr
  namespace: rentapp
spec:
  ports:
  - name: "http-port"
    protocol: TCP
    port: 50051
    targetPort: 50051
  selector:
    app: cache-mgr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: area-info-mgr
  labels:
    app: area-info-mgr
  namespace: rentapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: area-info-mgr
  template:
    metadata:
      labels:
        app: area-info-mgr
    spec:
      containers:
      - name: area-info-mgr
        image: local.insecure-registry.io/area-info-mgr:1.0.0
        imagePullPolicy: Always
        env:
          - name: REDIS_SERVER_URL
            value: "redis://rentapp:6379"
          - name: IMI_SERVER_URL
            value: "http://127.0.0.1:8080"
        ports:
        - containerPort: 50051
      - name: imi-server
        image: local.insecure-registry.io/imi-server:1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: area-info-mgr
  namespace: rentapp
spec:
  ports:
  - name: "http-port"
    protocol: TCP
    port: 50051
    targetPort: 50051
  selector:
    app: area-info-mgr
