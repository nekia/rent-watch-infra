apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: crowling-sites
  namespace: rentapp
spec:
  schedule: "30 7-23/2 * * *"
  timezone: "Asia/Tokyo"   # Default to local machine timezone
  # startingDeadlineSeconds: 0
  concurrencyPolicy: "Forbid"      # Default to "Allow"
  successfulJobsHistoryLimit: 4     # Default 3
  failedJobsHistoryLimit: 4         # Default 1
  # suspend: false                    # Set to "true" to suspend scheduling
  workflowSpec:
    entrypoint: step-step
    templates:
    - name: step-step
      steps:
      - - name: homes
          template: homes
          continueOn:
            failed: true
      - - name: suumo
          template: suumo
          continueOn:
            failed: true
      # - - name: linea
      #     template: linea
      #     continueOn:
      #       failed: true
      # - - name: goodrooms
      #     template: goodrooms
      #     continueOn:
      #       failed: true
      # - - name: rstore
      #     template: rstore
      #     continueOn:
      #       failed: true
      # - - name: mitsui
      #     template: mitsui
      #     continueOn:
      #       failed: true
      # - - name: rnet
      #     template: rnet
      #     continueOn:
      #       failed: true
      # - - name: ken
      #     template: ken
      #     continueOn:
      #       failed: true
      # - - name: bs
      #     template: bs
      #     continueOn:
      #       failed: true
      # - - name: td
      #     template: td
      #     continueOn:
      #       failed: true
      # - - name: tpo
      #     template: tpo
      #     continueOn:
      #       failed: true
      # - - name: homes-ngy
      #     template: homes-ngy
      #     continueOn:
      #       failed: true
    - name: homes
      container:
        image: local.insecure-registry.io/main:1.0.0
        imagePullPolicy: Always
        env:
          - name: NATS_SERVER_URL
            value: nats-server:4222
          - name: WATCHING_SITE_NAME
            value: "HOMES"
        command: [ "bash" ]
        args: ["-c","npm start"]
    - name: suumo
      container:
        image: local.insecure-registry.io/main:1.0.0
        imagePullPolicy: Always
        env:
          - name: NATS_SERVER_URL
            value: nats-server:4222
          - name: WATCHING_SITE_NAME
            value: "SUUMO"
        command: [ "bash" ]
        args: ["-c","npm start"]
    # - name: linea
    #   container:
    #     image: local.insecure-registry.io/crawler-linea:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-linea-config-tky-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: goodrooms
    #   container:
    #     image: local.insecure-registry.io/crawler-goodrooms:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-goodrooms-config-tky-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: rstore
    #   container:
    #     image: local.insecure-registry.io/crawler-rstore:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-rstore-config-tky-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: mitsui
    #   container:
    #     image: local.insecure-registry.io/crawler-mitsui:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-mitsui-config-tky-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: rnet
    #   container:
    #     image: local.insecure-registry.io/crawler-rnet:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-rnet-config-tky-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: ken
    #   container:
    #     image: local.insecure-registry.io/crawler-ken:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-ken-config-tky-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: bs
    #   container:
    #     image: local.insecure-registry.io/crawler-bs:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-bs-config-tky-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: td
    #   container:
    #     image: local.insecure-registry.io/crawler-td:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-td-config-tky-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: tpo
    #   container:
    #     image: local.insecure-registry.io/crawler-tpo:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-tpo-config-tky-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: homes-ngy
    #   container:
    #     image: local.insecure-registry.io/crawler-homes:1.0.0
    #     imagePullPolicy: Always
    #     env:
    #       - name: NATS_SERVER_URL
    #         value: nats-server:4222
    #       - name: CACHE_MGR_URL
    #         value: cache-mgr:50051
    #     command: [npm]
    #     args: ["start"]
    #     volumeMounts:
    #     - name: crawler-homes-config-ngy-rent
    #       mountPath: /usr/src/app/setting
    #       readOnly: true
    # - name: whalesay
    #   inputs:
    #     parameters:
    #     - name: message
    #   container:
    #     image: alpine:3.6
    #     command: [echo]
    #     args: ["{{inputs.parameters.message}}"]
    volumes:
    - name: crawler-homes-config-tky-rent
      configMap:
        name: crawler-homes-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-suumo-config-tky-rent
      configMap:
        name: crawler-suumo-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-linea-config-tky-rent
      configMap:
        name: crawler-linea-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-goodrooms-config-tky-rent
      configMap:
        name: crawler-goodrooms-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-rstore-config-tky-rent
      configMap:
        name: crawler-rstore-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-mitsui-config-tky-rent
      configMap:
        name: crawler-mitsui-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-rnet-config-tky-rent
      configMap:
        name: crawler-rnet-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-ken-config-tky-rent
      configMap:
        name: crawler-ken-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-bs-config-tky-rent
      configMap:
        name: crawler-bs-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-td-config-tky-rent
      configMap:
        name: crawler-td-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-tpo-config-tky-rent
      configMap:
        name: crawler-tpo-config-tky-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    - name: crawler-homes-config-ngy-rent
      configMap:
        name: crawler-homes-config-ngy-rent
        items:
        - key: "setting.json"
          path: "setting.json"
    imagePullSecrets:
    - name: regcred
